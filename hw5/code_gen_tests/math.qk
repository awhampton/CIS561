/* computes some math functions on integers */

class Math() {

    // returns x mod m
    def mod(x : Int, m : Int) : Int {
        if( m < 2){
            return -1;
        }

        q = x / m;
        return x - q * m;
    }

    // returns x!
    def factorial(x : Int) : Int {
        if(x < 0){
            return -1;
        }
        else{
            res = 1;
            while(x > 0){
                res = res * x;
                x = x - 1;
            }
            return res;
        }
    }

    // return x ^ y (computed by repeated squaring)
    def power(x : Int, y : Int) : Int {
        if(y < 0){
            return -1;
        }
        elif(y == 0){
            return 1;
        }
        else{
            res = 1;
            while(y > 1){
                if(this.mod(y, 2) == 0){
                    x = x * x;
                    y = y / 2;
                }
                else{
                    res = res * x;
                    x = x * x;
                    y = (y - 1) / 2;
                }
            }
            return res * x;
        }
    }

    // return floor(sqrt(x)) (computed by newton's method)
    def sqrt(x : Int) : Int {
        if(x < 0){
            return -1;
        }
        current = -1;
        next = x;
        while(not current == next){
            current = next;
            next = (current + (x / current)) / 2;
        }
        return current;
    }

}

math_library = Math();

"7 mod 2 = ".PRINT();
math_library.mod(7,2).PRINT();
"\n".PRINT();
"\n".PRINT();

"5! = ".PRINT();
math_library.factorial(5).PRINT();
"\n".PRINT();
"\n".PRINT();

"2^10 = ".PRINT();
math_library.power(2,10).PRINT();
"\n".PRINT();
"5^3 = ".PRINT();
math_library.power(5,3).PRINT();
"\n".PRINT();
"-5^3 = ".PRINT();
math_library.power(-5,3).PRINT();
"\n".PRINT();
"\n".PRINT();

"sqrt(25) = ".PRINT();
math_library.sqrt(25).PRINT();
"\n".PRINT();
"\n".PRINT();
