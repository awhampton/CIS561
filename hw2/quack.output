Grammar

    0 $accept: program $end

    1 program: classes statements

    2 classes: classes class
    3        | %empty

    4 class: class_signature class_body

    5 class_signature: class_sig_extends
    6                | class_sig_no_extends

    7 class_sig_extends: CLASS IDENT LPAREN formal_args RPAREN EXTENDS IDENT

    8 class_sig_no_extends: CLASS IDENT LPAREN formal_args RPAREN

    9 formal_args: formal_arg
   10            | %empty

   11 formal_arg: IDENT COLON IDENT formal_arg_repetitions

   12 formal_arg_repetitions: formal_arg_repetitions formal_arg_repetition
   13                       | formal_arg_repetitions error COMMA
   14                       | %empty

   15 formal_arg_repetition: COMMA IDENT COLON IDENT

   16 class_body: LBRACE statements methods RBRACE

   17 statements: statements statement
   18           | statements error '\n'
   19           | %empty

   20 statement: IF r_expr statement_block elifs opt_else
   21          | WHILE r_expr statement_block
   22          | l_expr opt_ident GETS r_expr SEMICOLON
   23          | r_expr SEMICOLON
   24          | RETURN r_expr SEMICOLON
   25          | RETURN SEMICOLON

   26 methods: methods method
   27        | %empty

   28 method: DEF IDENT LPAREN formal_args RPAREN opt_ident statement_block

   29 opt_ident: COLON IDENT
   30          | %empty

   31 statement_block: LBRACE statements RBRACE

   32 elifs: elifs elif_rule
   33      | %empty

   34 elif_rule: ELIF r_expr statement_block

   35 opt_else: else_rule
   36         | %empty

   37 else_rule: ELSE statement_block

   38 l_expr: IDENT
   39       | r_expr PERIOD IDENT

   40 r_expr: STRING_LIT
   41       | INT_LIT
   42       | l_expr
   43       | r_expr PLUS r_expr
   44       | r_expr MINUS r_expr
   45       | MINUS r_expr
   46       | r_expr TIMES r_expr
   47       | r_expr DIVIDE r_expr
   48       | LPAREN r_expr RPAREN
   49       | r_expr EQUALS r_expr
   50       | r_expr ATMOST r_expr
   51       | r_expr LESS r_expr
   52       | r_expr ATLEAST r_expr
   53       | r_expr MORE r_expr
   54       | r_expr AND r_expr
   55       | r_expr OR r_expr
   56       | NOT r_expr
   57       | r_expr PERIOD IDENT LPAREN actual_args RPAREN
   58       | IDENT LPAREN actual_args RPAREN

   59 actual_args: actual_arg
   60            | %empty

   61 actual_arg: r_expr actual_arg_repetitions

   62 actual_arg_repetitions: actual_arg_repetitions actual_arg_repetition
   63                       | %empty

   64 actual_arg_repetition: COMMA r_expr


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 18
error (256) 13 18
CLASS (258) 7 8
DEF (259) 28
EXTENDS (260) 7
IF (261) 20
ELIF (262) 34
ELSE (263) 37
WHILE (264) 21
RETURN (265) 24 25
LESS (266) 51
MORE (267) 53
ATLEAST (268) 52
ATMOST (269) 50
EQUALS (270) 49
AND (271) 54
OR (272) 55
NOT (273) 56
LPAREN (274) 7 8 28 48 57 58
RPAREN (275) 7 8 28 48 57 58
LBRACE (276) 16 31
RBRACE (277) 16 31
COLON (278) 11 15 29
SEMICOLON (279) 22 23 24 25
GETS (280) 22
COMMA (281) 13 15 64
PERIOD (282) 39 57
PLUS (283) 43
MINUS (284) 44 45
TIMES (285) 46
DIVIDE (286) 47
IDENT (287) 7 8 11 15 28 29 38 39 57 58
INT_LIT (288) 41
STRING_LIT (289) 40
NEG (290)


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
program (38)
    on left: 1, on right: 0
classes (39)
    on left: 2 3, on right: 1 2
class (40)
    on left: 4, on right: 2
class_signature (41)
    on left: 5 6, on right: 4
class_sig_extends (42)
    on left: 7, on right: 5
class_sig_no_extends (43)
    on left: 8, on right: 6
formal_args (44)
    on left: 9 10, on right: 7 8 28
formal_arg (45)
    on left: 11, on right: 9
formal_arg_repetitions (46)
    on left: 12 13 14, on right: 11 12 13
formal_arg_repetition (47)
    on left: 15, on right: 12
class_body (48)
    on left: 16, on right: 4
statements (49)
    on left: 17 18 19, on right: 1 16 17 18 31
statement (50)
    on left: 20 21 22 23 24 25, on right: 17
methods (51)
    on left: 26 27, on right: 16 26
method (52)
    on left: 28, on right: 26
opt_ident (53)
    on left: 29 30, on right: 22 28
statement_block (54)
    on left: 31, on right: 20 21 28 34 37
elifs (55)
    on left: 32 33, on right: 20 32
elif_rule (56)
    on left: 34, on right: 32
opt_else (57)
    on left: 35 36, on right: 20
else_rule (58)
    on left: 37, on right: 35
l_expr (59)
    on left: 38 39, on right: 22 42
r_expr (60)
    on left: 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57
    58, on right: 20 21 22 23 24 34 39 43 44 45 46 47 48 49 50 51 52
    53 54 55 56 57 61 64
actual_args (61)
    on left: 59 60, on right: 57 58
actual_arg (62)
    on left: 61, on right: 59
actual_arg_repetitions (63)
    on left: 62 63, on right: 61 62
actual_arg_repetition (64)
    on left: 64, on right: 62


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (classes)

    program  go to state 1
    classes  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: classes . statements
    2 classes: classes . class

    CLASS  shift, and go to state 4

    $default  reduce using rule 19 (statements)

    class                 go to state 5
    class_signature       go to state 6
    class_sig_extends     go to state 7
    class_sig_no_extends  go to state 8
    statements            go to state 9


State 3

    0 $accept: program $end .

    $default  accept


State 4

    7 class_sig_extends: CLASS . IDENT LPAREN formal_args RPAREN EXTENDS IDENT
    8 class_sig_no_extends: CLASS . IDENT LPAREN formal_args RPAREN

    IDENT  shift, and go to state 10


State 5

    2 classes: classes class .

    $default  reduce using rule 2 (classes)


State 6

    4 class: class_signature . class_body

    LBRACE  shift, and go to state 11

    class_body  go to state 12


State 7

    5 class_signature: class_sig_extends .

    $default  reduce using rule 5 (class_signature)


State 8

    6 class_signature: class_sig_no_extends .

    $default  reduce using rule 6 (class_signature)


State 9

    1 program: classes statements .
   17 statements: statements . statement
   18           | statements . error '\n'

    error       shift, and go to state 13
    IF          shift, and go to state 14
    WHILE       shift, and go to state 15
    RETURN      shift, and go to state 16
    NOT         shift, and go to state 17
    LPAREN      shift, and go to state 18
    MINUS       shift, and go to state 19
    IDENT       shift, and go to state 20
    INT_LIT     shift, and go to state 21
    STRING_LIT  shift, and go to state 22

    $end  reduce using rule 1 (program)

    statement  go to state 23
    l_expr     go to state 24
    r_expr     go to state 25


State 10

    7 class_sig_extends: CLASS IDENT . LPAREN formal_args RPAREN EXTENDS IDENT
    8 class_sig_no_extends: CLASS IDENT . LPAREN formal_args RPAREN

    LPAREN  shift, and go to state 26


State 11

   16 class_body: LBRACE . statements methods RBRACE

    $default  reduce using rule 19 (statements)

    statements  go to state 27


State 12

    4 class: class_signature class_body .

    $default  reduce using rule 4 (class)


State 13

   18 statements: statements error . '\n'

    '\n'  shift, and go to state 28


State 14

   20 statement: IF . r_expr statement_block elifs opt_else

    NOT         shift, and go to state 17
    LPAREN      shift, and go to state 18
    MINUS       shift, and go to state 19
    IDENT       shift, and go to state 20
    INT_LIT     shift, and go to state 21
    STRING_LIT  shift, and go to state 22

    l_expr  go to state 29
    r_expr  go to state 30


State 15

   21 statement: WHILE . r_expr statement_block

    NOT         shift, and go to state 17
    LPAREN      shift, and go to state 18
    MINUS       shift, and go to state 19
    IDENT       shift, and go to state 20
    INT_LIT     shift, and go to state 21
    STRING_LIT  shift, and go to state 22

    l_expr  go to state 29
    r_expr  go to state 31


State 16

   24 statement: RETURN . r_expr SEMICOLON
   25          | RETURN . SEMICOLON

    NOT         shift, and go to state 17
    LPAREN      shift, and go to state 18
    SEMICOLON   shift, and go to state 32
    MINUS       shift, and go to state 19
    IDENT       shift, and go to state 20
    INT_LIT     shift, and go to state 21
    STRING_LIT  shift, and go to state 22

    l_expr  go to state 29
    r_expr  go to state 33


State 17

   56 r_expr: NOT . r_expr

    NOT         shift, and go to state 17
    LPAREN      shift, and go to state 18
    MINUS       shift, and go to state 19
    IDENT       shift, and go to state 20
    INT_LIT     shift, and go to state 21
    STRING_LIT  shift, and go to state 22

    l_expr  go to state 29
    r_expr  go to state 34


State 18

   48 r_expr: LPAREN . r_expr RPAREN

    NOT         shift, and go to state 17
    LPAREN      shift, and go to state 18
    MINUS       shift, and go to state 19
    IDENT       shift, and go to state 20
    INT_LIT     shift, and go to state 21
    STRING_LIT  shift, and go to state 22

    l_expr  go to state 29
    r_expr  go to state 35


State 19

   45 r_expr: MINUS . r_expr

    NOT         shift, and go to state 17
    LPAREN      shift, and go to state 18
    MINUS       shift, and go to state 19
    IDENT       shift, and go to state 20
    INT_LIT     shift, and go to state 21
    STRING_LIT  shift, and go to state 22

    l_expr  go to state 29
    r_expr  go to state 36


State 20

   38 l_expr: IDENT .
   58 r_expr: IDENT . LPAREN actual_args RPAREN

    LPAREN  shift, and go to state 37

    $default  reduce using rule 38 (l_expr)


State 21

   41 r_expr: INT_LIT .

    $default  reduce using rule 41 (r_expr)


State 22

   40 r_expr: STRING_LIT .

    $default  reduce using rule 40 (r_expr)


State 23

   17 statements: statements statement .

    $default  reduce using rule 17 (statements)


State 24

   22 statement: l_expr . opt_ident GETS r_expr SEMICOLON
   42 r_expr: l_expr .

    COLON  shift, and go to state 38

    GETS      reduce using rule 30 (opt_ident)
    $default  reduce using rule 42 (r_expr)

    opt_ident  go to state 39


State 25

   23 statement: r_expr . SEMICOLON
   39 l_expr: r_expr . PERIOD IDENT
   43 r_expr: r_expr . PLUS r_expr
   44       | r_expr . MINUS r_expr
   46       | r_expr . TIMES r_expr
   47       | r_expr . DIVIDE r_expr
   49       | r_expr . EQUALS r_expr
   50       | r_expr . ATMOST r_expr
   51       | r_expr . LESS r_expr
   52       | r_expr . ATLEAST r_expr
   53       | r_expr . MORE r_expr
   54       | r_expr . AND r_expr
   55       | r_expr . OR r_expr
   57       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    LESS       shift, and go to state 40
    MORE       shift, and go to state 41
    ATLEAST    shift, and go to state 42
    ATMOST     shift, and go to state 43
    EQUALS     shift, and go to state 44
    AND        shift, and go to state 45
    OR         shift, and go to state 46
    SEMICOLON  shift, and go to state 47
    PERIOD     shift, and go to state 48
    PLUS       shift, and go to state 49
    MINUS      shift, and go to state 50
    TIMES      shift, and go to state 51
    DIVIDE     shift, and go to state 52


State 26

    7 class_sig_extends: CLASS IDENT LPAREN . formal_args RPAREN EXTENDS IDENT
    8 class_sig_no_extends: CLASS IDENT LPAREN . formal_args RPAREN

    IDENT  shift, and go to state 53

    $default  reduce using rule 10 (formal_args)

    formal_args  go to state 54
    formal_arg   go to state 55


State 27

   16 class_body: LBRACE statements . methods RBRACE
   17 statements: statements . statement
   18           | statements . error '\n'

    error       shift, and go to state 13
    IF          shift, and go to state 14
    WHILE       shift, and go to state 15
    RETURN      shift, and go to state 16
    NOT         shift, and go to state 17
    LPAREN      shift, and go to state 18
    MINUS       shift, and go to state 19
    IDENT       shift, and go to state 20
    INT_LIT     shift, and go to state 21
    STRING_LIT  shift, and go to state 22

    DEF     reduce using rule 27 (methods)
    RBRACE  reduce using rule 27 (methods)

    statement  go to state 23
    methods    go to state 56
    l_expr     go to state 24
    r_expr     go to state 25


State 28

   18 statements: statements error '\n' .

    $default  reduce using rule 18 (statements)


State 29

   42 r_expr: l_expr .

    $default  reduce using rule 42 (r_expr)


State 30

   20 statement: IF r_expr . statement_block elifs opt_else
   39 l_expr: r_expr . PERIOD IDENT
   43 r_expr: r_expr . PLUS r_expr
   44       | r_expr . MINUS r_expr
   46       | r_expr . TIMES r_expr
   47       | r_expr . DIVIDE r_expr
   49       | r_expr . EQUALS r_expr
   50       | r_expr . ATMOST r_expr
   51       | r_expr . LESS r_expr
   52       | r_expr . ATLEAST r_expr
   53       | r_expr . MORE r_expr
   54       | r_expr . AND r_expr
   55       | r_expr . OR r_expr
   57       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    LESS     shift, and go to state 40
    MORE     shift, and go to state 41
    ATLEAST  shift, and go to state 42
    ATMOST   shift, and go to state 43
    EQUALS   shift, and go to state 44
    AND      shift, and go to state 45
    OR       shift, and go to state 46
    LBRACE   shift, and go to state 57
    PERIOD   shift, and go to state 48
    PLUS     shift, and go to state 49
    MINUS    shift, and go to state 50
    TIMES    shift, and go to state 51
    DIVIDE   shift, and go to state 52

    statement_block  go to state 58


State 31

   21 statement: WHILE r_expr . statement_block
   39 l_expr: r_expr . PERIOD IDENT
   43 r_expr: r_expr . PLUS r_expr
   44       | r_expr . MINUS r_expr
   46       | r_expr . TIMES r_expr
   47       | r_expr . DIVIDE r_expr
   49       | r_expr . EQUALS r_expr
   50       | r_expr . ATMOST r_expr
   51       | r_expr . LESS r_expr
   52       | r_expr . ATLEAST r_expr
   53       | r_expr . MORE r_expr
   54       | r_expr . AND r_expr
   55       | r_expr . OR r_expr
   57       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    LESS     shift, and go to state 40
    MORE     shift, and go to state 41
    ATLEAST  shift, and go to state 42
    ATMOST   shift, and go to state 43
    EQUALS   shift, and go to state 44
    AND      shift, and go to state 45
    OR       shift, and go to state 46
    LBRACE   shift, and go to state 57
    PERIOD   shift, and go to state 48
    PLUS     shift, and go to state 49
    MINUS    shift, and go to state 50
    TIMES    shift, and go to state 51
    DIVIDE   shift, and go to state 52

    statement_block  go to state 59


State 32

   25 statement: RETURN SEMICOLON .

    $default  reduce using rule 25 (statement)


State 33

   24 statement: RETURN r_expr . SEMICOLON
   39 l_expr: r_expr . PERIOD IDENT
   43 r_expr: r_expr . PLUS r_expr
   44       | r_expr . MINUS r_expr
   46       | r_expr . TIMES r_expr
   47       | r_expr . DIVIDE r_expr
   49       | r_expr . EQUALS r_expr
   50       | r_expr . ATMOST r_expr
   51       | r_expr . LESS r_expr
   52       | r_expr . ATLEAST r_expr
   53       | r_expr . MORE r_expr
   54       | r_expr . AND r_expr
   55       | r_expr . OR r_expr
   57       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    LESS       shift, and go to state 40
    MORE       shift, and go to state 41
    ATLEAST    shift, and go to state 42
    ATMOST     shift, and go to state 43
    EQUALS     shift, and go to state 44
    AND        shift, and go to state 45
    OR         shift, and go to state 46
    SEMICOLON  shift, and go to state 60
    PERIOD     shift, and go to state 48
    PLUS       shift, and go to state 49
    MINUS      shift, and go to state 50
    TIMES      shift, and go to state 51
    DIVIDE     shift, and go to state 52


State 34

   39 l_expr: r_expr . PERIOD IDENT
   43 r_expr: r_expr . PLUS r_expr
   44       | r_expr . MINUS r_expr
   46       | r_expr . TIMES r_expr
   47       | r_expr . DIVIDE r_expr
   49       | r_expr . EQUALS r_expr
   50       | r_expr . ATMOST r_expr
   51       | r_expr . LESS r_expr
   52       | r_expr . ATLEAST r_expr
   53       | r_expr . MORE r_expr
   54       | r_expr . AND r_expr
   55       | r_expr . OR r_expr
   56       | NOT r_expr .
   57       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    LESS     shift, and go to state 40
    MORE     shift, and go to state 41
    ATLEAST  shift, and go to state 42
    ATMOST   shift, and go to state 43
    EQUALS   shift, and go to state 44
    PERIOD   shift, and go to state 48
    PLUS     shift, and go to state 49
    MINUS    shift, and go to state 50
    TIMES    shift, and go to state 51
    DIVIDE   shift, and go to state 52

    $default  reduce using rule 56 (r_expr)


State 35

   39 l_expr: r_expr . PERIOD IDENT
   43 r_expr: r_expr . PLUS r_expr
   44       | r_expr . MINUS r_expr
   46       | r_expr . TIMES r_expr
   47       | r_expr . DIVIDE r_expr
   48       | LPAREN r_expr . RPAREN
   49       | r_expr . EQUALS r_expr
   50       | r_expr . ATMOST r_expr
   51       | r_expr . LESS r_expr
   52       | r_expr . ATLEAST r_expr
   53       | r_expr . MORE r_expr
   54       | r_expr . AND r_expr
   55       | r_expr . OR r_expr
   57       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    LESS     shift, and go to state 40
    MORE     shift, and go to state 41
    ATLEAST  shift, and go to state 42
    ATMOST   shift, and go to state 43
    EQUALS   shift, and go to state 44
    AND      shift, and go to state 45
    OR       shift, and go to state 46
    RPAREN   shift, and go to state 61
    PERIOD   shift, and go to state 48
    PLUS     shift, and go to state 49
    MINUS    shift, and go to state 50
    TIMES    shift, and go to state 51
    DIVIDE   shift, and go to state 52


State 36

   39 l_expr: r_expr . PERIOD IDENT
   43 r_expr: r_expr . PLUS r_expr
   44       | r_expr . MINUS r_expr
   45       | MINUS r_expr .
   46       | r_expr . TIMES r_expr
   47       | r_expr . DIVIDE r_expr
   49       | r_expr . EQUALS r_expr
   50       | r_expr . ATMOST r_expr
   51       | r_expr . LESS r_expr
   52       | r_expr . ATLEAST r_expr
   53       | r_expr . MORE r_expr
   54       | r_expr . AND r_expr
   55       | r_expr . OR r_expr
   57       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    PERIOD  shift, and go to state 48

    $default  reduce using rule 45 (r_expr)


State 37

   58 r_expr: IDENT LPAREN . actual_args RPAREN

    NOT         shift, and go to state 17
    LPAREN      shift, and go to state 18
    MINUS       shift, and go to state 19
    IDENT       shift, and go to state 20
    INT_LIT     shift, and go to state 21
    STRING_LIT  shift, and go to state 22

    $default  reduce using rule 60 (actual_args)

    l_expr       go to state 29
    r_expr       go to state 62
    actual_args  go to state 63
    actual_arg   go to state 64


State 38

   29 opt_ident: COLON . IDENT

    IDENT  shift, and go to state 65


State 39

   22 statement: l_expr opt_ident . GETS r_expr SEMICOLON

    GETS  shift, and go to state 66


State 40

   51 r_expr: r_expr LESS . r_expr

    NOT         shift, and go to state 17
    LPAREN      shift, and go to state 18
    MINUS       shift, and go to state 19
    IDENT       shift, and go to state 20
    INT_LIT     shift, and go to state 21
    STRING_LIT  shift, and go to state 22

    l_expr  go to state 29
    r_expr  go to state 67


State 41

   53 r_expr: r_expr MORE . r_expr

    NOT         shift, and go to state 17
    LPAREN      shift, and go to state 18
    MINUS       shift, and go to state 19
    IDENT       shift, and go to state 20
    INT_LIT     shift, and go to state 21
    STRING_LIT  shift, and go to state 22

    l_expr  go to state 29
    r_expr  go to state 68


State 42

   52 r_expr: r_expr ATLEAST . r_expr

    NOT         shift, and go to state 17
    LPAREN      shift, and go to state 18
    MINUS       shift, and go to state 19
    IDENT       shift, and go to state 20
    INT_LIT     shift, and go to state 21
    STRING_LIT  shift, and go to state 22

    l_expr  go to state 29
    r_expr  go to state 69


State 43

   50 r_expr: r_expr ATMOST . r_expr

    NOT         shift, and go to state 17
    LPAREN      shift, and go to state 18
    MINUS       shift, and go to state 19
    IDENT       shift, and go to state 20
    INT_LIT     shift, and go to state 21
    STRING_LIT  shift, and go to state 22

    l_expr  go to state 29
    r_expr  go to state 70


State 44

   49 r_expr: r_expr EQUALS . r_expr

    NOT         shift, and go to state 17
    LPAREN      shift, and go to state 18
    MINUS       shift, and go to state 19
    IDENT       shift, and go to state 20
    INT_LIT     shift, and go to state 21
    STRING_LIT  shift, and go to state 22

    l_expr  go to state 29
    r_expr  go to state 71


State 45

   54 r_expr: r_expr AND . r_expr

    NOT         shift, and go to state 17
    LPAREN      shift, and go to state 18
    MINUS       shift, and go to state 19
    IDENT       shift, and go to state 20
    INT_LIT     shift, and go to state 21
    STRING_LIT  shift, and go to state 22

    l_expr  go to state 29
    r_expr  go to state 72


State 46

   55 r_expr: r_expr OR . r_expr

    NOT         shift, and go to state 17
    LPAREN      shift, and go to state 18
    MINUS       shift, and go to state 19
    IDENT       shift, and go to state 20
    INT_LIT     shift, and go to state 21
    STRING_LIT  shift, and go to state 22

    l_expr  go to state 29
    r_expr  go to state 73


State 47

   23 statement: r_expr SEMICOLON .

    $default  reduce using rule 23 (statement)


State 48

   39 l_expr: r_expr PERIOD . IDENT
   57 r_expr: r_expr PERIOD . IDENT LPAREN actual_args RPAREN

    IDENT  shift, and go to state 74


State 49

   43 r_expr: r_expr PLUS . r_expr

    NOT         shift, and go to state 17
    LPAREN      shift, and go to state 18
    MINUS       shift, and go to state 19
    IDENT       shift, and go to state 20
    INT_LIT     shift, and go to state 21
    STRING_LIT  shift, and go to state 22

    l_expr  go to state 29
    r_expr  go to state 75


State 50

   44 r_expr: r_expr MINUS . r_expr

    NOT         shift, and go to state 17
    LPAREN      shift, and go to state 18
    MINUS       shift, and go to state 19
    IDENT       shift, and go to state 20
    INT_LIT     shift, and go to state 21
    STRING_LIT  shift, and go to state 22

    l_expr  go to state 29
    r_expr  go to state 76


State 51

   46 r_expr: r_expr TIMES . r_expr

    NOT         shift, and go to state 17
    LPAREN      shift, and go to state 18
    MINUS       shift, and go to state 19
    IDENT       shift, and go to state 20
    INT_LIT     shift, and go to state 21
    STRING_LIT  shift, and go to state 22

    l_expr  go to state 29
    r_expr  go to state 77


State 52

   47 r_expr: r_expr DIVIDE . r_expr

    NOT         shift, and go to state 17
    LPAREN      shift, and go to state 18
    MINUS       shift, and go to state 19
    IDENT       shift, and go to state 20
    INT_LIT     shift, and go to state 21
    STRING_LIT  shift, and go to state 22

    l_expr  go to state 29
    r_expr  go to state 78


State 53

   11 formal_arg: IDENT . COLON IDENT formal_arg_repetitions

    COLON  shift, and go to state 79


State 54

    7 class_sig_extends: CLASS IDENT LPAREN formal_args . RPAREN EXTENDS IDENT
    8 class_sig_no_extends: CLASS IDENT LPAREN formal_args . RPAREN

    RPAREN  shift, and go to state 80


State 55

    9 formal_args: formal_arg .

    $default  reduce using rule 9 (formal_args)


State 56

   16 class_body: LBRACE statements methods . RBRACE
   26 methods: methods . method

    DEF     shift, and go to state 81
    RBRACE  shift, and go to state 82

    method  go to state 83


State 57

   31 statement_block: LBRACE . statements RBRACE

    $default  reduce using rule 19 (statements)

    statements  go to state 84


State 58

   20 statement: IF r_expr statement_block . elifs opt_else

    $default  reduce using rule 33 (elifs)

    elifs  go to state 85


State 59

   21 statement: WHILE r_expr statement_block .

    $default  reduce using rule 21 (statement)


State 60

   24 statement: RETURN r_expr SEMICOLON .

    $default  reduce using rule 24 (statement)


State 61

   48 r_expr: LPAREN r_expr RPAREN .

    $default  reduce using rule 48 (r_expr)


State 62

   39 l_expr: r_expr . PERIOD IDENT
   43 r_expr: r_expr . PLUS r_expr
   44       | r_expr . MINUS r_expr
   46       | r_expr . TIMES r_expr
   47       | r_expr . DIVIDE r_expr
   49       | r_expr . EQUALS r_expr
   50       | r_expr . ATMOST r_expr
   51       | r_expr . LESS r_expr
   52       | r_expr . ATLEAST r_expr
   53       | r_expr . MORE r_expr
   54       | r_expr . AND r_expr
   55       | r_expr . OR r_expr
   57       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN
   61 actual_arg: r_expr . actual_arg_repetitions

    LESS     shift, and go to state 40
    MORE     shift, and go to state 41
    ATLEAST  shift, and go to state 42
    ATMOST   shift, and go to state 43
    EQUALS   shift, and go to state 44
    AND      shift, and go to state 45
    OR       shift, and go to state 46
    PERIOD   shift, and go to state 48
    PLUS     shift, and go to state 49
    MINUS    shift, and go to state 50
    TIMES    shift, and go to state 51
    DIVIDE   shift, and go to state 52

    $default  reduce using rule 63 (actual_arg_repetitions)

    actual_arg_repetitions  go to state 86


State 63

   58 r_expr: IDENT LPAREN actual_args . RPAREN

    RPAREN  shift, and go to state 87


State 64

   59 actual_args: actual_arg .

    $default  reduce using rule 59 (actual_args)


State 65

   29 opt_ident: COLON IDENT .

    $default  reduce using rule 29 (opt_ident)


State 66

   22 statement: l_expr opt_ident GETS . r_expr SEMICOLON

    NOT         shift, and go to state 17
    LPAREN      shift, and go to state 18
    MINUS       shift, and go to state 19
    IDENT       shift, and go to state 20
    INT_LIT     shift, and go to state 21
    STRING_LIT  shift, and go to state 22

    l_expr  go to state 29
    r_expr  go to state 88


State 67

   39 l_expr: r_expr . PERIOD IDENT
   43 r_expr: r_expr . PLUS r_expr
   44       | r_expr . MINUS r_expr
   46       | r_expr . TIMES r_expr
   47       | r_expr . DIVIDE r_expr
   49       | r_expr . EQUALS r_expr
   50       | r_expr . ATMOST r_expr
   51       | r_expr . LESS r_expr
   51       | r_expr LESS r_expr .
   52       | r_expr . ATLEAST r_expr
   53       | r_expr . MORE r_expr
   54       | r_expr . AND r_expr
   55       | r_expr . OR r_expr
   57       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    PERIOD  shift, and go to state 48
    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52

    $default  reduce using rule 51 (r_expr)


State 68

   39 l_expr: r_expr . PERIOD IDENT
   43 r_expr: r_expr . PLUS r_expr
   44       | r_expr . MINUS r_expr
   46       | r_expr . TIMES r_expr
   47       | r_expr . DIVIDE r_expr
   49       | r_expr . EQUALS r_expr
   50       | r_expr . ATMOST r_expr
   51       | r_expr . LESS r_expr
   52       | r_expr . ATLEAST r_expr
   53       | r_expr . MORE r_expr
   53       | r_expr MORE r_expr .
   54       | r_expr . AND r_expr
   55       | r_expr . OR r_expr
   57       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    PERIOD  shift, and go to state 48
    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52

    $default  reduce using rule 53 (r_expr)


State 69

   39 l_expr: r_expr . PERIOD IDENT
   43 r_expr: r_expr . PLUS r_expr
   44       | r_expr . MINUS r_expr
   46       | r_expr . TIMES r_expr
   47       | r_expr . DIVIDE r_expr
   49       | r_expr . EQUALS r_expr
   50       | r_expr . ATMOST r_expr
   51       | r_expr . LESS r_expr
   52       | r_expr . ATLEAST r_expr
   52       | r_expr ATLEAST r_expr .
   53       | r_expr . MORE r_expr
   54       | r_expr . AND r_expr
   55       | r_expr . OR r_expr
   57       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    PERIOD  shift, and go to state 48
    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52

    $default  reduce using rule 52 (r_expr)


State 70

   39 l_expr: r_expr . PERIOD IDENT
   43 r_expr: r_expr . PLUS r_expr
   44       | r_expr . MINUS r_expr
   46       | r_expr . TIMES r_expr
   47       | r_expr . DIVIDE r_expr
   49       | r_expr . EQUALS r_expr
   50       | r_expr . ATMOST r_expr
   50       | r_expr ATMOST r_expr .
   51       | r_expr . LESS r_expr
   52       | r_expr . ATLEAST r_expr
   53       | r_expr . MORE r_expr
   54       | r_expr . AND r_expr
   55       | r_expr . OR r_expr
   57       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    PERIOD  shift, and go to state 48
    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52

    $default  reduce using rule 50 (r_expr)


State 71

   39 l_expr: r_expr . PERIOD IDENT
   43 r_expr: r_expr . PLUS r_expr
   44       | r_expr . MINUS r_expr
   46       | r_expr . TIMES r_expr
   47       | r_expr . DIVIDE r_expr
   49       | r_expr . EQUALS r_expr
   49       | r_expr EQUALS r_expr .
   50       | r_expr . ATMOST r_expr
   51       | r_expr . LESS r_expr
   52       | r_expr . ATLEAST r_expr
   53       | r_expr . MORE r_expr
   54       | r_expr . AND r_expr
   55       | r_expr . OR r_expr
   57       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    PERIOD  shift, and go to state 48
    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52

    $default  reduce using rule 49 (r_expr)


State 72

   39 l_expr: r_expr . PERIOD IDENT
   43 r_expr: r_expr . PLUS r_expr
   44       | r_expr . MINUS r_expr
   46       | r_expr . TIMES r_expr
   47       | r_expr . DIVIDE r_expr
   49       | r_expr . EQUALS r_expr
   50       | r_expr . ATMOST r_expr
   51       | r_expr . LESS r_expr
   52       | r_expr . ATLEAST r_expr
   53       | r_expr . MORE r_expr
   54       | r_expr . AND r_expr
   54       | r_expr AND r_expr .
   55       | r_expr . OR r_expr
   57       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    LESS     shift, and go to state 40
    MORE     shift, and go to state 41
    ATLEAST  shift, and go to state 42
    ATMOST   shift, and go to state 43
    EQUALS   shift, and go to state 44
    PERIOD   shift, and go to state 48
    PLUS     shift, and go to state 49
    MINUS    shift, and go to state 50
    TIMES    shift, and go to state 51
    DIVIDE   shift, and go to state 52

    $default  reduce using rule 54 (r_expr)


State 73

   39 l_expr: r_expr . PERIOD IDENT
   43 r_expr: r_expr . PLUS r_expr
   44       | r_expr . MINUS r_expr
   46       | r_expr . TIMES r_expr
   47       | r_expr . DIVIDE r_expr
   49       | r_expr . EQUALS r_expr
   50       | r_expr . ATMOST r_expr
   51       | r_expr . LESS r_expr
   52       | r_expr . ATLEAST r_expr
   53       | r_expr . MORE r_expr
   54       | r_expr . AND r_expr
   55       | r_expr . OR r_expr
   55       | r_expr OR r_expr .
   57       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    LESS     shift, and go to state 40
    MORE     shift, and go to state 41
    ATLEAST  shift, and go to state 42
    ATMOST   shift, and go to state 43
    EQUALS   shift, and go to state 44
    PERIOD   shift, and go to state 48
    PLUS     shift, and go to state 49
    MINUS    shift, and go to state 50
    TIMES    shift, and go to state 51
    DIVIDE   shift, and go to state 52

    $default  reduce using rule 55 (r_expr)


State 74

   39 l_expr: r_expr PERIOD IDENT .
   57 r_expr: r_expr PERIOD IDENT . LPAREN actual_args RPAREN

    LPAREN  shift, and go to state 89

    $default  reduce using rule 39 (l_expr)


State 75

   39 l_expr: r_expr . PERIOD IDENT
   43 r_expr: r_expr . PLUS r_expr
   43       | r_expr PLUS r_expr .
   44       | r_expr . MINUS r_expr
   46       | r_expr . TIMES r_expr
   47       | r_expr . DIVIDE r_expr
   49       | r_expr . EQUALS r_expr
   50       | r_expr . ATMOST r_expr
   51       | r_expr . LESS r_expr
   52       | r_expr . ATLEAST r_expr
   53       | r_expr . MORE r_expr
   54       | r_expr . AND r_expr
   55       | r_expr . OR r_expr
   57       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    PERIOD  shift, and go to state 48
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52

    $default  reduce using rule 43 (r_expr)


State 76

   39 l_expr: r_expr . PERIOD IDENT
   43 r_expr: r_expr . PLUS r_expr
   44       | r_expr . MINUS r_expr
   44       | r_expr MINUS r_expr .
   46       | r_expr . TIMES r_expr
   47       | r_expr . DIVIDE r_expr
   49       | r_expr . EQUALS r_expr
   50       | r_expr . ATMOST r_expr
   51       | r_expr . LESS r_expr
   52       | r_expr . ATLEAST r_expr
   53       | r_expr . MORE r_expr
   54       | r_expr . AND r_expr
   55       | r_expr . OR r_expr
   57       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    PERIOD  shift, and go to state 48
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52

    $default  reduce using rule 44 (r_expr)


State 77

   39 l_expr: r_expr . PERIOD IDENT
   43 r_expr: r_expr . PLUS r_expr
   44       | r_expr . MINUS r_expr
   46       | r_expr . TIMES r_expr
   46       | r_expr TIMES r_expr .
   47       | r_expr . DIVIDE r_expr
   49       | r_expr . EQUALS r_expr
   50       | r_expr . ATMOST r_expr
   51       | r_expr . LESS r_expr
   52       | r_expr . ATLEAST r_expr
   53       | r_expr . MORE r_expr
   54       | r_expr . AND r_expr
   55       | r_expr . OR r_expr
   57       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    PERIOD  shift, and go to state 48

    $default  reduce using rule 46 (r_expr)


State 78

   39 l_expr: r_expr . PERIOD IDENT
   43 r_expr: r_expr . PLUS r_expr
   44       | r_expr . MINUS r_expr
   46       | r_expr . TIMES r_expr
   47       | r_expr . DIVIDE r_expr
   47       | r_expr DIVIDE r_expr .
   49       | r_expr . EQUALS r_expr
   50       | r_expr . ATMOST r_expr
   51       | r_expr . LESS r_expr
   52       | r_expr . ATLEAST r_expr
   53       | r_expr . MORE r_expr
   54       | r_expr . AND r_expr
   55       | r_expr . OR r_expr
   57       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    PERIOD  shift, and go to state 48

    $default  reduce using rule 47 (r_expr)


State 79

   11 formal_arg: IDENT COLON . IDENT formal_arg_repetitions

    IDENT  shift, and go to state 90


State 80

    7 class_sig_extends: CLASS IDENT LPAREN formal_args RPAREN . EXTENDS IDENT
    8 class_sig_no_extends: CLASS IDENT LPAREN formal_args RPAREN .

    EXTENDS  shift, and go to state 91

    $default  reduce using rule 8 (class_sig_no_extends)


State 81

   28 method: DEF . IDENT LPAREN formal_args RPAREN opt_ident statement_block

    IDENT  shift, and go to state 92


State 82

   16 class_body: LBRACE statements methods RBRACE .

    $default  reduce using rule 16 (class_body)


State 83

   26 methods: methods method .

    $default  reduce using rule 26 (methods)


State 84

   17 statements: statements . statement
   18           | statements . error '\n'
   31 statement_block: LBRACE statements . RBRACE

    error       shift, and go to state 13
    IF          shift, and go to state 14
    WHILE       shift, and go to state 15
    RETURN      shift, and go to state 16
    NOT         shift, and go to state 17
    LPAREN      shift, and go to state 18
    RBRACE      shift, and go to state 93
    MINUS       shift, and go to state 19
    IDENT       shift, and go to state 20
    INT_LIT     shift, and go to state 21
    STRING_LIT  shift, and go to state 22

    statement  go to state 23
    l_expr     go to state 24
    r_expr     go to state 25


State 85

   20 statement: IF r_expr statement_block elifs . opt_else
   32 elifs: elifs . elif_rule

    ELIF  shift, and go to state 94
    ELSE  shift, and go to state 95

    $default  reduce using rule 36 (opt_else)

    elif_rule  go to state 96
    opt_else   go to state 97
    else_rule  go to state 98


State 86

   61 actual_arg: r_expr actual_arg_repetitions .
   62 actual_arg_repetitions: actual_arg_repetitions . actual_arg_repetition

    COMMA  shift, and go to state 99

    $default  reduce using rule 61 (actual_arg)

    actual_arg_repetition  go to state 100


State 87

   58 r_expr: IDENT LPAREN actual_args RPAREN .

    $default  reduce using rule 58 (r_expr)


State 88

   22 statement: l_expr opt_ident GETS r_expr . SEMICOLON
   39 l_expr: r_expr . PERIOD IDENT
   43 r_expr: r_expr . PLUS r_expr
   44       | r_expr . MINUS r_expr
   46       | r_expr . TIMES r_expr
   47       | r_expr . DIVIDE r_expr
   49       | r_expr . EQUALS r_expr
   50       | r_expr . ATMOST r_expr
   51       | r_expr . LESS r_expr
   52       | r_expr . ATLEAST r_expr
   53       | r_expr . MORE r_expr
   54       | r_expr . AND r_expr
   55       | r_expr . OR r_expr
   57       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    LESS       shift, and go to state 40
    MORE       shift, and go to state 41
    ATLEAST    shift, and go to state 42
    ATMOST     shift, and go to state 43
    EQUALS     shift, and go to state 44
    AND        shift, and go to state 45
    OR         shift, and go to state 46
    SEMICOLON  shift, and go to state 101
    PERIOD     shift, and go to state 48
    PLUS       shift, and go to state 49
    MINUS      shift, and go to state 50
    TIMES      shift, and go to state 51
    DIVIDE     shift, and go to state 52


State 89

   57 r_expr: r_expr PERIOD IDENT LPAREN . actual_args RPAREN

    NOT         shift, and go to state 17
    LPAREN      shift, and go to state 18
    MINUS       shift, and go to state 19
    IDENT       shift, and go to state 20
    INT_LIT     shift, and go to state 21
    STRING_LIT  shift, and go to state 22

    $default  reduce using rule 60 (actual_args)

    l_expr       go to state 29
    r_expr       go to state 62
    actual_args  go to state 102
    actual_arg   go to state 64


State 90

   11 formal_arg: IDENT COLON IDENT . formal_arg_repetitions

    $default  reduce using rule 14 (formal_arg_repetitions)

    formal_arg_repetitions  go to state 103


State 91

    7 class_sig_extends: CLASS IDENT LPAREN formal_args RPAREN EXTENDS . IDENT

    IDENT  shift, and go to state 104


State 92

   28 method: DEF IDENT . LPAREN formal_args RPAREN opt_ident statement_block

    LPAREN  shift, and go to state 105


State 93

   31 statement_block: LBRACE statements RBRACE .

    $default  reduce using rule 31 (statement_block)


State 94

   34 elif_rule: ELIF . r_expr statement_block

    NOT         shift, and go to state 17
    LPAREN      shift, and go to state 18
    MINUS       shift, and go to state 19
    IDENT       shift, and go to state 20
    INT_LIT     shift, and go to state 21
    STRING_LIT  shift, and go to state 22

    l_expr  go to state 29
    r_expr  go to state 106


State 95

   37 else_rule: ELSE . statement_block

    LBRACE  shift, and go to state 57

    statement_block  go to state 107


State 96

   32 elifs: elifs elif_rule .

    $default  reduce using rule 32 (elifs)


State 97

   20 statement: IF r_expr statement_block elifs opt_else .

    $default  reduce using rule 20 (statement)


State 98

   35 opt_else: else_rule .

    $default  reduce using rule 35 (opt_else)


State 99

   64 actual_arg_repetition: COMMA . r_expr

    NOT         shift, and go to state 17
    LPAREN      shift, and go to state 18
    MINUS       shift, and go to state 19
    IDENT       shift, and go to state 20
    INT_LIT     shift, and go to state 21
    STRING_LIT  shift, and go to state 22

    l_expr  go to state 29
    r_expr  go to state 108


State 100

   62 actual_arg_repetitions: actual_arg_repetitions actual_arg_repetition .

    $default  reduce using rule 62 (actual_arg_repetitions)


State 101

   22 statement: l_expr opt_ident GETS r_expr SEMICOLON .

    $default  reduce using rule 22 (statement)


State 102

   57 r_expr: r_expr PERIOD IDENT LPAREN actual_args . RPAREN

    RPAREN  shift, and go to state 109


State 103

   11 formal_arg: IDENT COLON IDENT formal_arg_repetitions .
   12 formal_arg_repetitions: formal_arg_repetitions . formal_arg_repetition
   13                       | formal_arg_repetitions . error COMMA

    error  shift, and go to state 110
    COMMA  shift, and go to state 111

    RPAREN  reduce using rule 11 (formal_arg)

    formal_arg_repetition  go to state 112


State 104

    7 class_sig_extends: CLASS IDENT LPAREN formal_args RPAREN EXTENDS IDENT .

    $default  reduce using rule 7 (class_sig_extends)


State 105

   28 method: DEF IDENT LPAREN . formal_args RPAREN opt_ident statement_block

    IDENT  shift, and go to state 53

    $default  reduce using rule 10 (formal_args)

    formal_args  go to state 113
    formal_arg   go to state 55


State 106

   34 elif_rule: ELIF r_expr . statement_block
   39 l_expr: r_expr . PERIOD IDENT
   43 r_expr: r_expr . PLUS r_expr
   44       | r_expr . MINUS r_expr
   46       | r_expr . TIMES r_expr
   47       | r_expr . DIVIDE r_expr
   49       | r_expr . EQUALS r_expr
   50       | r_expr . ATMOST r_expr
   51       | r_expr . LESS r_expr
   52       | r_expr . ATLEAST r_expr
   53       | r_expr . MORE r_expr
   54       | r_expr . AND r_expr
   55       | r_expr . OR r_expr
   57       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    LESS     shift, and go to state 40
    MORE     shift, and go to state 41
    ATLEAST  shift, and go to state 42
    ATMOST   shift, and go to state 43
    EQUALS   shift, and go to state 44
    AND      shift, and go to state 45
    OR       shift, and go to state 46
    LBRACE   shift, and go to state 57
    PERIOD   shift, and go to state 48
    PLUS     shift, and go to state 49
    MINUS    shift, and go to state 50
    TIMES    shift, and go to state 51
    DIVIDE   shift, and go to state 52

    statement_block  go to state 114


State 107

   37 else_rule: ELSE statement_block .

    $default  reduce using rule 37 (else_rule)


State 108

   39 l_expr: r_expr . PERIOD IDENT
   43 r_expr: r_expr . PLUS r_expr
   44       | r_expr . MINUS r_expr
   46       | r_expr . TIMES r_expr
   47       | r_expr . DIVIDE r_expr
   49       | r_expr . EQUALS r_expr
   50       | r_expr . ATMOST r_expr
   51       | r_expr . LESS r_expr
   52       | r_expr . ATLEAST r_expr
   53       | r_expr . MORE r_expr
   54       | r_expr . AND r_expr
   55       | r_expr . OR r_expr
   57       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN
   64 actual_arg_repetition: COMMA r_expr .

    LESS     shift, and go to state 40
    MORE     shift, and go to state 41
    ATLEAST  shift, and go to state 42
    ATMOST   shift, and go to state 43
    EQUALS   shift, and go to state 44
    AND      shift, and go to state 45
    OR       shift, and go to state 46
    PERIOD   shift, and go to state 48
    PLUS     shift, and go to state 49
    MINUS    shift, and go to state 50
    TIMES    shift, and go to state 51
    DIVIDE   shift, and go to state 52

    $default  reduce using rule 64 (actual_arg_repetition)


State 109

   57 r_expr: r_expr PERIOD IDENT LPAREN actual_args RPAREN .

    $default  reduce using rule 57 (r_expr)


State 110

   13 formal_arg_repetitions: formal_arg_repetitions error . COMMA

    COMMA  shift, and go to state 115


State 111

   15 formal_arg_repetition: COMMA . IDENT COLON IDENT

    IDENT  shift, and go to state 116


State 112

   12 formal_arg_repetitions: formal_arg_repetitions formal_arg_repetition .

    $default  reduce using rule 12 (formal_arg_repetitions)


State 113

   28 method: DEF IDENT LPAREN formal_args . RPAREN opt_ident statement_block

    RPAREN  shift, and go to state 117


State 114

   34 elif_rule: ELIF r_expr statement_block .

    $default  reduce using rule 34 (elif_rule)


State 115

   13 formal_arg_repetitions: formal_arg_repetitions error COMMA .

    $default  reduce using rule 13 (formal_arg_repetitions)


State 116

   15 formal_arg_repetition: COMMA IDENT . COLON IDENT

    COLON  shift, and go to state 118


State 117

   28 method: DEF IDENT LPAREN formal_args RPAREN . opt_ident statement_block

    COLON  shift, and go to state 38

    $default  reduce using rule 30 (opt_ident)

    opt_ident  go to state 119


State 118

   15 formal_arg_repetition: COMMA IDENT COLON . IDENT

    IDENT  shift, and go to state 120


State 119

   28 method: DEF IDENT LPAREN formal_args RPAREN opt_ident . statement_block

    LBRACE  shift, and go to state 57

    statement_block  go to state 121


State 120

   15 formal_arg_repetition: COMMA IDENT COLON IDENT .

    $default  reduce using rule 15 (formal_arg_repetition)


State 121

   28 method: DEF IDENT LPAREN formal_args RPAREN opt_ident statement_block .

    $default  reduce using rule 28 (method)
