Grammar

    0 $accept: program $end

    1 program: classes statements

    2 classes: classes class
    3        | %empty

    4 class: class_signature class_body

    5 class_signature: class_sig_extends
    6                | class_sig_no_extends

    7 class_sig_extends: CLASS IDENT LPAREN formal_args RPAREN EXTENDS IDENT

    8 class_sig_no_extends: CLASS IDENT LPAREN formal_args RPAREN

    9 formal_args: formal_arg
   10            | %empty

   11 formal_arg: IDENT COLON IDENT formal_arg_repetitions

   12 formal_arg_repetitions: formal_arg_repetitions formal_arg_repetition
   13                       | %empty

   14 formal_arg_repetition: COMMA IDENT COLON IDENT

   15 class_body: LBRACE statements methods RBRACE

   16 statements: statements statement
   17           | %empty

   18 statement: IF r_expr statement_block elifs opt_else
   19          | WHILE r_expr statement_block
   20          | l_expr opt_ident GETS r_expr SEMICOLON
   21          | r_expr SEMICOLON
   22          | RETURN r_expr SEMICOLON
   23          | RETURN SEMICOLON

   24 methods: methods method
   25        | %empty

   26 method: DEF IDENT LPAREN formal_args RPAREN opt_ident statement_block

   27 opt_ident: COLON IDENT
   28          | %empty

   29 statement_block: LBRACE statements RBRACE

   30 elifs: elifs elif_rule
   31      | %empty

   32 elif_rule: ELIF r_expr statement_block

   33 opt_else: else_rule
   34         | %empty

   35 else_rule: ELSE statement_block

   36 l_expr: IDENT
   37       | r_expr PERIOD IDENT

   38 r_expr: STRING_LIT
   39       | INT_LIT
   40       | l_expr
   41       | r_expr PLUS r_expr
   42       | r_expr MINUS r_expr
   43       | r_expr TIMES r_expr
   44       | r_expr DIVIDE r_expr
   45       | LPAREN r_expr RPAREN
   46       | r_expr EQUALS r_expr
   47       | r_expr ATMOST r_expr
   48       | r_expr LESS r_expr
   49       | r_expr ATLEAST r_expr
   50       | r_expr MORE r_expr
   51       | r_expr AND r_expr
   52       | r_expr OR r_expr
   53       | NOT r_expr
   54       | r_expr PERIOD IDENT LPAREN actual_args RPAREN
   55       | IDENT LPAREN actual_args RPAREN

   56 actual_args: actual_arg
   57            | %empty

   58 actual_arg: r_expr actual_arg_repetitions

   59 actual_arg_repetitions: actual_arg_repetitions actual_arg_repetition
   60                       | %empty

   61 actual_arg_repetition: COMMA r_expr


Terminals, with rules where they appear

$end (0) 0
error (256)
CLASS (258) 7 8
DEF (259) 26
EXTENDS (260) 7
IF (261) 18
ELIF (262) 32
ELSE (263) 35
WHILE (264) 19
RETURN (265) 22 23
LESS (266) 48
MORE (267) 50
ATLEAST (268) 49
ATMOST (269) 47
EQUALS (270) 46
AND (271) 51
OR (272) 52
NOT (273) 53
LPAREN (274) 7 8 26 45 54 55
RPAREN (275) 7 8 26 45 54 55
LBRACE (276) 15 29
RBRACE (277) 15 29
COLON (278) 11 14 27
SEMICOLON (279) 20 21 22 23
GETS (280) 20
COMMA (281) 14 61
PERIOD (282) 37 54
PLUS (283) 41
MINUS (284) 42
TIMES (285) 43
DIVIDE (286) 44
IDENT (287) 7 8 11 14 26 27 36 37 54 55
INT_LIT (288) 39
STRING_LIT (289) 38


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
program (36)
    on left: 1, on right: 0
classes (37)
    on left: 2 3, on right: 1 2
class (38)
    on left: 4, on right: 2
class_signature (39)
    on left: 5 6, on right: 4
class_sig_extends (40)
    on left: 7, on right: 5
class_sig_no_extends (41)
    on left: 8, on right: 6
formal_args (42)
    on left: 9 10, on right: 7 8 26
formal_arg (43)
    on left: 11, on right: 9
formal_arg_repetitions (44)
    on left: 12 13, on right: 11 12
formal_arg_repetition (45)
    on left: 14, on right: 12
class_body (46)
    on left: 15, on right: 4
statements (47)
    on left: 16 17, on right: 1 15 16 29
statement (48)
    on left: 18 19 20 21 22 23, on right: 16
methods (49)
    on left: 24 25, on right: 15 24
method (50)
    on left: 26, on right: 24
opt_ident (51)
    on left: 27 28, on right: 20 26
statement_block (52)
    on left: 29, on right: 18 19 26 32 35
elifs (53)
    on left: 30 31, on right: 18 30
elif_rule (54)
    on left: 32, on right: 30
opt_else (55)
    on left: 33 34, on right: 18
else_rule (56)
    on left: 35, on right: 33
l_expr (57)
    on left: 36 37, on right: 20 40
r_expr (58)
    on left: 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55,
    on right: 18 19 20 21 22 32 37 41 42 43 44 45 46 47 48 49 50 51
    52 53 54 58 61
actual_args (59)
    on left: 56 57, on right: 54 55
actual_arg (60)
    on left: 58, on right: 56
actual_arg_repetitions (61)
    on left: 59 60, on right: 58 59
actual_arg_repetition (62)
    on left: 61, on right: 59


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (classes)

    program  go to state 1
    classes  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: classes . statements
    2 classes: classes . class

    CLASS  shift, and go to state 4

    $default  reduce using rule 17 (statements)

    class                 go to state 5
    class_signature       go to state 6
    class_sig_extends     go to state 7
    class_sig_no_extends  go to state 8
    statements            go to state 9


State 3

    0 $accept: program $end .

    $default  accept


State 4

    7 class_sig_extends: CLASS . IDENT LPAREN formal_args RPAREN EXTENDS IDENT
    8 class_sig_no_extends: CLASS . IDENT LPAREN formal_args RPAREN

    IDENT  shift, and go to state 10


State 5

    2 classes: classes class .

    $default  reduce using rule 2 (classes)


State 6

    4 class: class_signature . class_body

    LBRACE  shift, and go to state 11

    class_body  go to state 12


State 7

    5 class_signature: class_sig_extends .

    $default  reduce using rule 5 (class_signature)


State 8

    6 class_signature: class_sig_no_extends .

    $default  reduce using rule 6 (class_signature)


State 9

    1 program: classes statements .
   16 statements: statements . statement

    IF          shift, and go to state 13
    WHILE       shift, and go to state 14
    RETURN      shift, and go to state 15
    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 17
    IDENT       shift, and go to state 18
    INT_LIT     shift, and go to state 19
    STRING_LIT  shift, and go to state 20

    $default  reduce using rule 1 (program)

    statement  go to state 21
    l_expr     go to state 22
    r_expr     go to state 23


State 10

    7 class_sig_extends: CLASS IDENT . LPAREN formal_args RPAREN EXTENDS IDENT
    8 class_sig_no_extends: CLASS IDENT . LPAREN formal_args RPAREN

    LPAREN  shift, and go to state 24


State 11

   15 class_body: LBRACE . statements methods RBRACE

    $default  reduce using rule 17 (statements)

    statements  go to state 25


State 12

    4 class: class_signature class_body .

    $default  reduce using rule 4 (class)


State 13

   18 statement: IF . r_expr statement_block elifs opt_else

    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 17
    IDENT       shift, and go to state 18
    INT_LIT     shift, and go to state 19
    STRING_LIT  shift, and go to state 20

    l_expr  go to state 26
    r_expr  go to state 27


State 14

   19 statement: WHILE . r_expr statement_block

    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 17
    IDENT       shift, and go to state 18
    INT_LIT     shift, and go to state 19
    STRING_LIT  shift, and go to state 20

    l_expr  go to state 26
    r_expr  go to state 28


State 15

   22 statement: RETURN . r_expr SEMICOLON
   23          | RETURN . SEMICOLON

    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 17
    SEMICOLON   shift, and go to state 29
    IDENT       shift, and go to state 18
    INT_LIT     shift, and go to state 19
    STRING_LIT  shift, and go to state 20

    l_expr  go to state 26
    r_expr  go to state 30


State 16

   53 r_expr: NOT . r_expr

    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 17
    IDENT       shift, and go to state 18
    INT_LIT     shift, and go to state 19
    STRING_LIT  shift, and go to state 20

    l_expr  go to state 26
    r_expr  go to state 31


State 17

   45 r_expr: LPAREN . r_expr RPAREN

    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 17
    IDENT       shift, and go to state 18
    INT_LIT     shift, and go to state 19
    STRING_LIT  shift, and go to state 20

    l_expr  go to state 26
    r_expr  go to state 32


State 18

   36 l_expr: IDENT .
   55 r_expr: IDENT . LPAREN actual_args RPAREN

    LPAREN  shift, and go to state 33

    $default  reduce using rule 36 (l_expr)


State 19

   39 r_expr: INT_LIT .

    $default  reduce using rule 39 (r_expr)


State 20

   38 r_expr: STRING_LIT .

    $default  reduce using rule 38 (r_expr)


State 21

   16 statements: statements statement .

    $default  reduce using rule 16 (statements)


State 22

   20 statement: l_expr . opt_ident GETS r_expr SEMICOLON
   40 r_expr: l_expr .

    COLON  shift, and go to state 34

    GETS      reduce using rule 28 (opt_ident)
    $default  reduce using rule 40 (r_expr)

    opt_ident  go to state 35


State 23

   21 statement: r_expr . SEMICOLON
   37 l_expr: r_expr . PERIOD IDENT
   41 r_expr: r_expr . PLUS r_expr
   42       | r_expr . MINUS r_expr
   43       | r_expr . TIMES r_expr
   44       | r_expr . DIVIDE r_expr
   46       | r_expr . EQUALS r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . LESS r_expr
   49       | r_expr . ATLEAST r_expr
   50       | r_expr . MORE r_expr
   51       | r_expr . AND r_expr
   52       | r_expr . OR r_expr
   54       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    LESS       shift, and go to state 36
    MORE       shift, and go to state 37
    ATLEAST    shift, and go to state 38
    ATMOST     shift, and go to state 39
    EQUALS     shift, and go to state 40
    AND        shift, and go to state 41
    OR         shift, and go to state 42
    SEMICOLON  shift, and go to state 43
    PERIOD     shift, and go to state 44
    PLUS       shift, and go to state 45
    MINUS      shift, and go to state 46
    TIMES      shift, and go to state 47
    DIVIDE     shift, and go to state 48


State 24

    7 class_sig_extends: CLASS IDENT LPAREN . formal_args RPAREN EXTENDS IDENT
    8 class_sig_no_extends: CLASS IDENT LPAREN . formal_args RPAREN

    IDENT  shift, and go to state 49

    $default  reduce using rule 10 (formal_args)

    formal_args  go to state 50
    formal_arg   go to state 51


State 25

   15 class_body: LBRACE statements . methods RBRACE
   16 statements: statements . statement

    IF          shift, and go to state 13
    WHILE       shift, and go to state 14
    RETURN      shift, and go to state 15
    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 17
    IDENT       shift, and go to state 18
    INT_LIT     shift, and go to state 19
    STRING_LIT  shift, and go to state 20

    $default  reduce using rule 25 (methods)

    statement  go to state 21
    methods    go to state 52
    l_expr     go to state 22
    r_expr     go to state 23


State 26

   40 r_expr: l_expr .

    $default  reduce using rule 40 (r_expr)


State 27

   18 statement: IF r_expr . statement_block elifs opt_else
   37 l_expr: r_expr . PERIOD IDENT
   41 r_expr: r_expr . PLUS r_expr
   42       | r_expr . MINUS r_expr
   43       | r_expr . TIMES r_expr
   44       | r_expr . DIVIDE r_expr
   46       | r_expr . EQUALS r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . LESS r_expr
   49       | r_expr . ATLEAST r_expr
   50       | r_expr . MORE r_expr
   51       | r_expr . AND r_expr
   52       | r_expr . OR r_expr
   54       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    LESS     shift, and go to state 36
    MORE     shift, and go to state 37
    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    LBRACE   shift, and go to state 53
    PERIOD   shift, and go to state 44
    PLUS     shift, and go to state 45
    MINUS    shift, and go to state 46
    TIMES    shift, and go to state 47
    DIVIDE   shift, and go to state 48

    statement_block  go to state 54


State 28

   19 statement: WHILE r_expr . statement_block
   37 l_expr: r_expr . PERIOD IDENT
   41 r_expr: r_expr . PLUS r_expr
   42       | r_expr . MINUS r_expr
   43       | r_expr . TIMES r_expr
   44       | r_expr . DIVIDE r_expr
   46       | r_expr . EQUALS r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . LESS r_expr
   49       | r_expr . ATLEAST r_expr
   50       | r_expr . MORE r_expr
   51       | r_expr . AND r_expr
   52       | r_expr . OR r_expr
   54       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    LESS     shift, and go to state 36
    MORE     shift, and go to state 37
    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    LBRACE   shift, and go to state 53
    PERIOD   shift, and go to state 44
    PLUS     shift, and go to state 45
    MINUS    shift, and go to state 46
    TIMES    shift, and go to state 47
    DIVIDE   shift, and go to state 48

    statement_block  go to state 55


State 29

   23 statement: RETURN SEMICOLON .

    $default  reduce using rule 23 (statement)


State 30

   22 statement: RETURN r_expr . SEMICOLON
   37 l_expr: r_expr . PERIOD IDENT
   41 r_expr: r_expr . PLUS r_expr
   42       | r_expr . MINUS r_expr
   43       | r_expr . TIMES r_expr
   44       | r_expr . DIVIDE r_expr
   46       | r_expr . EQUALS r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . LESS r_expr
   49       | r_expr . ATLEAST r_expr
   50       | r_expr . MORE r_expr
   51       | r_expr . AND r_expr
   52       | r_expr . OR r_expr
   54       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    LESS       shift, and go to state 36
    MORE       shift, and go to state 37
    ATLEAST    shift, and go to state 38
    ATMOST     shift, and go to state 39
    EQUALS     shift, and go to state 40
    AND        shift, and go to state 41
    OR         shift, and go to state 42
    SEMICOLON  shift, and go to state 56
    PERIOD     shift, and go to state 44
    PLUS       shift, and go to state 45
    MINUS      shift, and go to state 46
    TIMES      shift, and go to state 47
    DIVIDE     shift, and go to state 48


State 31

   37 l_expr: r_expr . PERIOD IDENT
   41 r_expr: r_expr . PLUS r_expr
   42       | r_expr . MINUS r_expr
   43       | r_expr . TIMES r_expr
   44       | r_expr . DIVIDE r_expr
   46       | r_expr . EQUALS r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . LESS r_expr
   49       | r_expr . ATLEAST r_expr
   50       | r_expr . MORE r_expr
   51       | r_expr . AND r_expr
   52       | r_expr . OR r_expr
   53       | NOT r_expr .
   54       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    LESS     shift, and go to state 36
    MORE     shift, and go to state 37
    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    PERIOD   shift, and go to state 44
    PLUS     shift, and go to state 45
    MINUS    shift, and go to state 46
    TIMES    shift, and go to state 47
    DIVIDE   shift, and go to state 48

    $default  reduce using rule 53 (r_expr)


State 32

   37 l_expr: r_expr . PERIOD IDENT
   41 r_expr: r_expr . PLUS r_expr
   42       | r_expr . MINUS r_expr
   43       | r_expr . TIMES r_expr
   44       | r_expr . DIVIDE r_expr
   45       | LPAREN r_expr . RPAREN
   46       | r_expr . EQUALS r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . LESS r_expr
   49       | r_expr . ATLEAST r_expr
   50       | r_expr . MORE r_expr
   51       | r_expr . AND r_expr
   52       | r_expr . OR r_expr
   54       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    LESS     shift, and go to state 36
    MORE     shift, and go to state 37
    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    RPAREN   shift, and go to state 57
    PERIOD   shift, and go to state 44
    PLUS     shift, and go to state 45
    MINUS    shift, and go to state 46
    TIMES    shift, and go to state 47
    DIVIDE   shift, and go to state 48


State 33

   55 r_expr: IDENT LPAREN . actual_args RPAREN

    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 17
    IDENT       shift, and go to state 18
    INT_LIT     shift, and go to state 19
    STRING_LIT  shift, and go to state 20

    $default  reduce using rule 57 (actual_args)

    l_expr       go to state 26
    r_expr       go to state 58
    actual_args  go to state 59
    actual_arg   go to state 60


State 34

   27 opt_ident: COLON . IDENT

    IDENT  shift, and go to state 61


State 35

   20 statement: l_expr opt_ident . GETS r_expr SEMICOLON

    GETS  shift, and go to state 62


State 36

   48 r_expr: r_expr LESS . r_expr

    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 17
    IDENT       shift, and go to state 18
    INT_LIT     shift, and go to state 19
    STRING_LIT  shift, and go to state 20

    l_expr  go to state 26
    r_expr  go to state 63


State 37

   50 r_expr: r_expr MORE . r_expr

    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 17
    IDENT       shift, and go to state 18
    INT_LIT     shift, and go to state 19
    STRING_LIT  shift, and go to state 20

    l_expr  go to state 26
    r_expr  go to state 64


State 38

   49 r_expr: r_expr ATLEAST . r_expr

    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 17
    IDENT       shift, and go to state 18
    INT_LIT     shift, and go to state 19
    STRING_LIT  shift, and go to state 20

    l_expr  go to state 26
    r_expr  go to state 65


State 39

   47 r_expr: r_expr ATMOST . r_expr

    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 17
    IDENT       shift, and go to state 18
    INT_LIT     shift, and go to state 19
    STRING_LIT  shift, and go to state 20

    l_expr  go to state 26
    r_expr  go to state 66


State 40

   46 r_expr: r_expr EQUALS . r_expr

    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 17
    IDENT       shift, and go to state 18
    INT_LIT     shift, and go to state 19
    STRING_LIT  shift, and go to state 20

    l_expr  go to state 26
    r_expr  go to state 67


State 41

   51 r_expr: r_expr AND . r_expr

    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 17
    IDENT       shift, and go to state 18
    INT_LIT     shift, and go to state 19
    STRING_LIT  shift, and go to state 20

    l_expr  go to state 26
    r_expr  go to state 68


State 42

   52 r_expr: r_expr OR . r_expr

    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 17
    IDENT       shift, and go to state 18
    INT_LIT     shift, and go to state 19
    STRING_LIT  shift, and go to state 20

    l_expr  go to state 26
    r_expr  go to state 69


State 43

   21 statement: r_expr SEMICOLON .

    $default  reduce using rule 21 (statement)


State 44

   37 l_expr: r_expr PERIOD . IDENT
   54 r_expr: r_expr PERIOD . IDENT LPAREN actual_args RPAREN

    IDENT  shift, and go to state 70


State 45

   41 r_expr: r_expr PLUS . r_expr

    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 17
    IDENT       shift, and go to state 18
    INT_LIT     shift, and go to state 19
    STRING_LIT  shift, and go to state 20

    l_expr  go to state 26
    r_expr  go to state 71


State 46

   42 r_expr: r_expr MINUS . r_expr

    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 17
    IDENT       shift, and go to state 18
    INT_LIT     shift, and go to state 19
    STRING_LIT  shift, and go to state 20

    l_expr  go to state 26
    r_expr  go to state 72


State 47

   43 r_expr: r_expr TIMES . r_expr

    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 17
    IDENT       shift, and go to state 18
    INT_LIT     shift, and go to state 19
    STRING_LIT  shift, and go to state 20

    l_expr  go to state 26
    r_expr  go to state 73


State 48

   44 r_expr: r_expr DIVIDE . r_expr

    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 17
    IDENT       shift, and go to state 18
    INT_LIT     shift, and go to state 19
    STRING_LIT  shift, and go to state 20

    l_expr  go to state 26
    r_expr  go to state 74


State 49

   11 formal_arg: IDENT . COLON IDENT formal_arg_repetitions

    COLON  shift, and go to state 75


State 50

    7 class_sig_extends: CLASS IDENT LPAREN formal_args . RPAREN EXTENDS IDENT
    8 class_sig_no_extends: CLASS IDENT LPAREN formal_args . RPAREN

    RPAREN  shift, and go to state 76


State 51

    9 formal_args: formal_arg .

    $default  reduce using rule 9 (formal_args)


State 52

   15 class_body: LBRACE statements methods . RBRACE
   24 methods: methods . method

    DEF     shift, and go to state 77
    RBRACE  shift, and go to state 78

    method  go to state 79


State 53

   29 statement_block: LBRACE . statements RBRACE

    $default  reduce using rule 17 (statements)

    statements  go to state 80


State 54

   18 statement: IF r_expr statement_block . elifs opt_else

    $default  reduce using rule 31 (elifs)

    elifs  go to state 81


State 55

   19 statement: WHILE r_expr statement_block .

    $default  reduce using rule 19 (statement)


State 56

   22 statement: RETURN r_expr SEMICOLON .

    $default  reduce using rule 22 (statement)


State 57

   45 r_expr: LPAREN r_expr RPAREN .

    $default  reduce using rule 45 (r_expr)


State 58

   37 l_expr: r_expr . PERIOD IDENT
   41 r_expr: r_expr . PLUS r_expr
   42       | r_expr . MINUS r_expr
   43       | r_expr . TIMES r_expr
   44       | r_expr . DIVIDE r_expr
   46       | r_expr . EQUALS r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . LESS r_expr
   49       | r_expr . ATLEAST r_expr
   50       | r_expr . MORE r_expr
   51       | r_expr . AND r_expr
   52       | r_expr . OR r_expr
   54       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN
   58 actual_arg: r_expr . actual_arg_repetitions

    LESS     shift, and go to state 36
    MORE     shift, and go to state 37
    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    PERIOD   shift, and go to state 44
    PLUS     shift, and go to state 45
    MINUS    shift, and go to state 46
    TIMES    shift, and go to state 47
    DIVIDE   shift, and go to state 48

    $default  reduce using rule 60 (actual_arg_repetitions)

    actual_arg_repetitions  go to state 82


State 59

   55 r_expr: IDENT LPAREN actual_args . RPAREN

    RPAREN  shift, and go to state 83


State 60

   56 actual_args: actual_arg .

    $default  reduce using rule 56 (actual_args)


State 61

   27 opt_ident: COLON IDENT .

    $default  reduce using rule 27 (opt_ident)


State 62

   20 statement: l_expr opt_ident GETS . r_expr SEMICOLON

    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 17
    IDENT       shift, and go to state 18
    INT_LIT     shift, and go to state 19
    STRING_LIT  shift, and go to state 20

    l_expr  go to state 26
    r_expr  go to state 84


State 63

   37 l_expr: r_expr . PERIOD IDENT
   41 r_expr: r_expr . PLUS r_expr
   42       | r_expr . MINUS r_expr
   43       | r_expr . TIMES r_expr
   44       | r_expr . DIVIDE r_expr
   46       | r_expr . EQUALS r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . LESS r_expr
   48       | r_expr LESS r_expr .
   49       | r_expr . ATLEAST r_expr
   50       | r_expr . MORE r_expr
   51       | r_expr . AND r_expr
   52       | r_expr . OR r_expr
   54       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    PERIOD  shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 48 (r_expr)


State 64

   37 l_expr: r_expr . PERIOD IDENT
   41 r_expr: r_expr . PLUS r_expr
   42       | r_expr . MINUS r_expr
   43       | r_expr . TIMES r_expr
   44       | r_expr . DIVIDE r_expr
   46       | r_expr . EQUALS r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . LESS r_expr
   49       | r_expr . ATLEAST r_expr
   50       | r_expr . MORE r_expr
   50       | r_expr MORE r_expr .
   51       | r_expr . AND r_expr
   52       | r_expr . OR r_expr
   54       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    PERIOD  shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 50 (r_expr)


State 65

   37 l_expr: r_expr . PERIOD IDENT
   41 r_expr: r_expr . PLUS r_expr
   42       | r_expr . MINUS r_expr
   43       | r_expr . TIMES r_expr
   44       | r_expr . DIVIDE r_expr
   46       | r_expr . EQUALS r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . LESS r_expr
   49       | r_expr . ATLEAST r_expr
   49       | r_expr ATLEAST r_expr .
   50       | r_expr . MORE r_expr
   51       | r_expr . AND r_expr
   52       | r_expr . OR r_expr
   54       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    PERIOD  shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 49 (r_expr)


State 66

   37 l_expr: r_expr . PERIOD IDENT
   41 r_expr: r_expr . PLUS r_expr
   42       | r_expr . MINUS r_expr
   43       | r_expr . TIMES r_expr
   44       | r_expr . DIVIDE r_expr
   46       | r_expr . EQUALS r_expr
   47       | r_expr . ATMOST r_expr
   47       | r_expr ATMOST r_expr .
   48       | r_expr . LESS r_expr
   49       | r_expr . ATLEAST r_expr
   50       | r_expr . MORE r_expr
   51       | r_expr . AND r_expr
   52       | r_expr . OR r_expr
   54       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    PERIOD  shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 47 (r_expr)


State 67

   37 l_expr: r_expr . PERIOD IDENT
   41 r_expr: r_expr . PLUS r_expr
   42       | r_expr . MINUS r_expr
   43       | r_expr . TIMES r_expr
   44       | r_expr . DIVIDE r_expr
   46       | r_expr . EQUALS r_expr
   46       | r_expr EQUALS r_expr .
   47       | r_expr . ATMOST r_expr
   48       | r_expr . LESS r_expr
   49       | r_expr . ATLEAST r_expr
   50       | r_expr . MORE r_expr
   51       | r_expr . AND r_expr
   52       | r_expr . OR r_expr
   54       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    PERIOD  shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 46 (r_expr)


State 68

   37 l_expr: r_expr . PERIOD IDENT
   41 r_expr: r_expr . PLUS r_expr
   42       | r_expr . MINUS r_expr
   43       | r_expr . TIMES r_expr
   44       | r_expr . DIVIDE r_expr
   46       | r_expr . EQUALS r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . LESS r_expr
   49       | r_expr . ATLEAST r_expr
   50       | r_expr . MORE r_expr
   51       | r_expr . AND r_expr
   51       | r_expr AND r_expr .
   52       | r_expr . OR r_expr
   54       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    LESS     shift, and go to state 36
    MORE     shift, and go to state 37
    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    PERIOD   shift, and go to state 44
    PLUS     shift, and go to state 45
    MINUS    shift, and go to state 46
    TIMES    shift, and go to state 47
    DIVIDE   shift, and go to state 48

    $default  reduce using rule 51 (r_expr)


State 69

   37 l_expr: r_expr . PERIOD IDENT
   41 r_expr: r_expr . PLUS r_expr
   42       | r_expr . MINUS r_expr
   43       | r_expr . TIMES r_expr
   44       | r_expr . DIVIDE r_expr
   46       | r_expr . EQUALS r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . LESS r_expr
   49       | r_expr . ATLEAST r_expr
   50       | r_expr . MORE r_expr
   51       | r_expr . AND r_expr
   52       | r_expr . OR r_expr
   52       | r_expr OR r_expr .
   54       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    LESS     shift, and go to state 36
    MORE     shift, and go to state 37
    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    PERIOD   shift, and go to state 44
    PLUS     shift, and go to state 45
    MINUS    shift, and go to state 46
    TIMES    shift, and go to state 47
    DIVIDE   shift, and go to state 48

    $default  reduce using rule 52 (r_expr)


State 70

   37 l_expr: r_expr PERIOD IDENT .
   54 r_expr: r_expr PERIOD IDENT . LPAREN actual_args RPAREN

    LPAREN  shift, and go to state 85

    $default  reduce using rule 37 (l_expr)


State 71

   37 l_expr: r_expr . PERIOD IDENT
   41 r_expr: r_expr . PLUS r_expr
   41       | r_expr PLUS r_expr .
   42       | r_expr . MINUS r_expr
   43       | r_expr . TIMES r_expr
   44       | r_expr . DIVIDE r_expr
   46       | r_expr . EQUALS r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . LESS r_expr
   49       | r_expr . ATLEAST r_expr
   50       | r_expr . MORE r_expr
   51       | r_expr . AND r_expr
   52       | r_expr . OR r_expr
   54       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    PERIOD  shift, and go to state 44
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 41 (r_expr)


State 72

   37 l_expr: r_expr . PERIOD IDENT
   41 r_expr: r_expr . PLUS r_expr
   42       | r_expr . MINUS r_expr
   42       | r_expr MINUS r_expr .
   43       | r_expr . TIMES r_expr
   44       | r_expr . DIVIDE r_expr
   46       | r_expr . EQUALS r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . LESS r_expr
   49       | r_expr . ATLEAST r_expr
   50       | r_expr . MORE r_expr
   51       | r_expr . AND r_expr
   52       | r_expr . OR r_expr
   54       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    PERIOD  shift, and go to state 44
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 42 (r_expr)


State 73

   37 l_expr: r_expr . PERIOD IDENT
   41 r_expr: r_expr . PLUS r_expr
   42       | r_expr . MINUS r_expr
   43       | r_expr . TIMES r_expr
   43       | r_expr TIMES r_expr .
   44       | r_expr . DIVIDE r_expr
   46       | r_expr . EQUALS r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . LESS r_expr
   49       | r_expr . ATLEAST r_expr
   50       | r_expr . MORE r_expr
   51       | r_expr . AND r_expr
   52       | r_expr . OR r_expr
   54       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    PERIOD  shift, and go to state 44

    $default  reduce using rule 43 (r_expr)


State 74

   37 l_expr: r_expr . PERIOD IDENT
   41 r_expr: r_expr . PLUS r_expr
   42       | r_expr . MINUS r_expr
   43       | r_expr . TIMES r_expr
   44       | r_expr . DIVIDE r_expr
   44       | r_expr DIVIDE r_expr .
   46       | r_expr . EQUALS r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . LESS r_expr
   49       | r_expr . ATLEAST r_expr
   50       | r_expr . MORE r_expr
   51       | r_expr . AND r_expr
   52       | r_expr . OR r_expr
   54       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    PERIOD  shift, and go to state 44

    $default  reduce using rule 44 (r_expr)


State 75

   11 formal_arg: IDENT COLON . IDENT formal_arg_repetitions

    IDENT  shift, and go to state 86


State 76

    7 class_sig_extends: CLASS IDENT LPAREN formal_args RPAREN . EXTENDS IDENT
    8 class_sig_no_extends: CLASS IDENT LPAREN formal_args RPAREN .

    EXTENDS  shift, and go to state 87

    $default  reduce using rule 8 (class_sig_no_extends)


State 77

   26 method: DEF . IDENT LPAREN formal_args RPAREN opt_ident statement_block

    IDENT  shift, and go to state 88


State 78

   15 class_body: LBRACE statements methods RBRACE .

    $default  reduce using rule 15 (class_body)


State 79

   24 methods: methods method .

    $default  reduce using rule 24 (methods)


State 80

   16 statements: statements . statement
   29 statement_block: LBRACE statements . RBRACE

    IF          shift, and go to state 13
    WHILE       shift, and go to state 14
    RETURN      shift, and go to state 15
    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 17
    RBRACE      shift, and go to state 89
    IDENT       shift, and go to state 18
    INT_LIT     shift, and go to state 19
    STRING_LIT  shift, and go to state 20

    statement  go to state 21
    l_expr     go to state 22
    r_expr     go to state 23


State 81

   18 statement: IF r_expr statement_block elifs . opt_else
   30 elifs: elifs . elif_rule

    ELIF  shift, and go to state 90
    ELSE  shift, and go to state 91

    $default  reduce using rule 34 (opt_else)

    elif_rule  go to state 92
    opt_else   go to state 93
    else_rule  go to state 94


State 82

   58 actual_arg: r_expr actual_arg_repetitions .
   59 actual_arg_repetitions: actual_arg_repetitions . actual_arg_repetition

    COMMA  shift, and go to state 95

    $default  reduce using rule 58 (actual_arg)

    actual_arg_repetition  go to state 96


State 83

   55 r_expr: IDENT LPAREN actual_args RPAREN .

    $default  reduce using rule 55 (r_expr)


State 84

   20 statement: l_expr opt_ident GETS r_expr . SEMICOLON
   37 l_expr: r_expr . PERIOD IDENT
   41 r_expr: r_expr . PLUS r_expr
   42       | r_expr . MINUS r_expr
   43       | r_expr . TIMES r_expr
   44       | r_expr . DIVIDE r_expr
   46       | r_expr . EQUALS r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . LESS r_expr
   49       | r_expr . ATLEAST r_expr
   50       | r_expr . MORE r_expr
   51       | r_expr . AND r_expr
   52       | r_expr . OR r_expr
   54       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    LESS       shift, and go to state 36
    MORE       shift, and go to state 37
    ATLEAST    shift, and go to state 38
    ATMOST     shift, and go to state 39
    EQUALS     shift, and go to state 40
    AND        shift, and go to state 41
    OR         shift, and go to state 42
    SEMICOLON  shift, and go to state 97
    PERIOD     shift, and go to state 44
    PLUS       shift, and go to state 45
    MINUS      shift, and go to state 46
    TIMES      shift, and go to state 47
    DIVIDE     shift, and go to state 48


State 85

   54 r_expr: r_expr PERIOD IDENT LPAREN . actual_args RPAREN

    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 17
    IDENT       shift, and go to state 18
    INT_LIT     shift, and go to state 19
    STRING_LIT  shift, and go to state 20

    $default  reduce using rule 57 (actual_args)

    l_expr       go to state 26
    r_expr       go to state 58
    actual_args  go to state 98
    actual_arg   go to state 60


State 86

   11 formal_arg: IDENT COLON IDENT . formal_arg_repetitions

    $default  reduce using rule 13 (formal_arg_repetitions)

    formal_arg_repetitions  go to state 99


State 87

    7 class_sig_extends: CLASS IDENT LPAREN formal_args RPAREN EXTENDS . IDENT

    IDENT  shift, and go to state 100


State 88

   26 method: DEF IDENT . LPAREN formal_args RPAREN opt_ident statement_block

    LPAREN  shift, and go to state 101


State 89

   29 statement_block: LBRACE statements RBRACE .

    $default  reduce using rule 29 (statement_block)


State 90

   32 elif_rule: ELIF . r_expr statement_block

    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 17
    IDENT       shift, and go to state 18
    INT_LIT     shift, and go to state 19
    STRING_LIT  shift, and go to state 20

    l_expr  go to state 26
    r_expr  go to state 102


State 91

   35 else_rule: ELSE . statement_block

    LBRACE  shift, and go to state 53

    statement_block  go to state 103


State 92

   30 elifs: elifs elif_rule .

    $default  reduce using rule 30 (elifs)


State 93

   18 statement: IF r_expr statement_block elifs opt_else .

    $default  reduce using rule 18 (statement)


State 94

   33 opt_else: else_rule .

    $default  reduce using rule 33 (opt_else)


State 95

   61 actual_arg_repetition: COMMA . r_expr

    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 17
    IDENT       shift, and go to state 18
    INT_LIT     shift, and go to state 19
    STRING_LIT  shift, and go to state 20

    l_expr  go to state 26
    r_expr  go to state 104


State 96

   59 actual_arg_repetitions: actual_arg_repetitions actual_arg_repetition .

    $default  reduce using rule 59 (actual_arg_repetitions)


State 97

   20 statement: l_expr opt_ident GETS r_expr SEMICOLON .

    $default  reduce using rule 20 (statement)


State 98

   54 r_expr: r_expr PERIOD IDENT LPAREN actual_args . RPAREN

    RPAREN  shift, and go to state 105


State 99

   11 formal_arg: IDENT COLON IDENT formal_arg_repetitions .
   12 formal_arg_repetitions: formal_arg_repetitions . formal_arg_repetition

    COMMA  shift, and go to state 106

    $default  reduce using rule 11 (formal_arg)

    formal_arg_repetition  go to state 107


State 100

    7 class_sig_extends: CLASS IDENT LPAREN formal_args RPAREN EXTENDS IDENT .

    $default  reduce using rule 7 (class_sig_extends)


State 101

   26 method: DEF IDENT LPAREN . formal_args RPAREN opt_ident statement_block

    IDENT  shift, and go to state 49

    $default  reduce using rule 10 (formal_args)

    formal_args  go to state 108
    formal_arg   go to state 51


State 102

   32 elif_rule: ELIF r_expr . statement_block
   37 l_expr: r_expr . PERIOD IDENT
   41 r_expr: r_expr . PLUS r_expr
   42       | r_expr . MINUS r_expr
   43       | r_expr . TIMES r_expr
   44       | r_expr . DIVIDE r_expr
   46       | r_expr . EQUALS r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . LESS r_expr
   49       | r_expr . ATLEAST r_expr
   50       | r_expr . MORE r_expr
   51       | r_expr . AND r_expr
   52       | r_expr . OR r_expr
   54       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN

    LESS     shift, and go to state 36
    MORE     shift, and go to state 37
    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    LBRACE   shift, and go to state 53
    PERIOD   shift, and go to state 44
    PLUS     shift, and go to state 45
    MINUS    shift, and go to state 46
    TIMES    shift, and go to state 47
    DIVIDE   shift, and go to state 48

    statement_block  go to state 109


State 103

   35 else_rule: ELSE statement_block .

    $default  reduce using rule 35 (else_rule)


State 104

   37 l_expr: r_expr . PERIOD IDENT
   41 r_expr: r_expr . PLUS r_expr
   42       | r_expr . MINUS r_expr
   43       | r_expr . TIMES r_expr
   44       | r_expr . DIVIDE r_expr
   46       | r_expr . EQUALS r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . LESS r_expr
   49       | r_expr . ATLEAST r_expr
   50       | r_expr . MORE r_expr
   51       | r_expr . AND r_expr
   52       | r_expr . OR r_expr
   54       | r_expr . PERIOD IDENT LPAREN actual_args RPAREN
   61 actual_arg_repetition: COMMA r_expr .

    LESS     shift, and go to state 36
    MORE     shift, and go to state 37
    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    PERIOD   shift, and go to state 44
    PLUS     shift, and go to state 45
    MINUS    shift, and go to state 46
    TIMES    shift, and go to state 47
    DIVIDE   shift, and go to state 48

    $default  reduce using rule 61 (actual_arg_repetition)


State 105

   54 r_expr: r_expr PERIOD IDENT LPAREN actual_args RPAREN .

    $default  reduce using rule 54 (r_expr)


State 106

   14 formal_arg_repetition: COMMA . IDENT COLON IDENT

    IDENT  shift, and go to state 110


State 107

   12 formal_arg_repetitions: formal_arg_repetitions formal_arg_repetition .

    $default  reduce using rule 12 (formal_arg_repetitions)


State 108

   26 method: DEF IDENT LPAREN formal_args . RPAREN opt_ident statement_block

    RPAREN  shift, and go to state 111


State 109

   32 elif_rule: ELIF r_expr statement_block .

    $default  reduce using rule 32 (elif_rule)


State 110

   14 formal_arg_repetition: COMMA IDENT . COLON IDENT

    COLON  shift, and go to state 112


State 111

   26 method: DEF IDENT LPAREN formal_args RPAREN . opt_ident statement_block

    COLON  shift, and go to state 34

    $default  reduce using rule 28 (opt_ident)

    opt_ident  go to state 113


State 112

   14 formal_arg_repetition: COMMA IDENT COLON . IDENT

    IDENT  shift, and go to state 114


State 113

   26 method: DEF IDENT LPAREN formal_args RPAREN opt_ident . statement_block

    LBRACE  shift, and go to state 53

    statement_block  go to state 115


State 114

   14 formal_arg_repetition: COMMA IDENT COLON IDENT .

    $default  reduce using rule 14 (formal_arg_repetition)


State 115

   26 method: DEF IDENT LPAREN formal_args RPAREN opt_ident statement_block .

    $default  reduce using rule 26 (method)
